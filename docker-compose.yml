version: "3.8"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init.sh:/docker-entrypoint-initdb.d/db-init.sh
    networks:
      - backend
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    networks:
      - backend

  auth-service:
    build: ./auth-service
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=b_db_auth
      - JWT_SECRET=HiHiHaHa
      - PORT=5000
    command: bash -c "npm run migration:run && npm run start"
    networks:
      - backend
    depends_on:
      - db

  events-service:
    build: ./events-service
    ports:
      - "5001:5001"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=b_db_events
      - JWT_SECRET=HiHiHaHa
      - PORT=5001
    command: bash -c "npm run migration:run && npm run start"
    networks:
      - backend
    depends_on:
      - db

  participants-service:
    build: ./participants-service
    ports:
      - "5002:5002"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME="postgres
      - DB_PASSWORD="postgres
      - DB_NAME=b_db_participants
      - JWT_SECRET=HiHiHaHa
      - PORT=5002
    command: bash -c "npm run migration:run && npm run start"
    networks:
      - backend
    depends_on:
      - db

  user-service:
    build: ./user-service
    ports:
      - "5003:5003"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=b_db_auth
      - JWT_SECRET=HiHiHaHa
      - PORT=5003
    command: bash -c "npm run migration:run && npm run start"
    networks:
      - backend
    depends_on:
      - db

volumes:
  postgres_data:

networks:
  backend:
